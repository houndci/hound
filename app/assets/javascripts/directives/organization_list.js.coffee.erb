App.directive 'organizationList',
['Repo', 'Sync', 'User', '$timeout', (Repo, Sync, User, $timeout) ->
  scope: {}
  templateUrl: '/templates/organization_list'
  link: (scope, element, attributes) ->
    scope.includePrivateReposButtonText = '<%= I18n.t('include_private_repos') %>'

    loadRepos = ->
      scope.syncingRepos = false

      repos = Repo.query()
      repos.$promise.then((results) ->
        scope.repos = results
        organizations = scope.repos.map((repo) ->
          repo.owner
        )
        scope.organizations = _.uniqWith(organizations, _.isEqual)
      , ->
        alert('Your repos failed to load.')
      )

    loadUserPaymentInfo = ->
      user = User.get()
      user.$promise
        .then (result) -> scope.userCardExists = result.card_exists
        .catch -> alert("Failed to load current user.")

    pollSyncStatus = ->
      successfulSync = (user) ->
        if user.refreshing_repos
          pollSyncStatus()
        else
          loadRepos()

      failedSync = ->
        pollSyncStatus()

      getSyncs = ->
        user = User.get()
        user.$promise.then(successfulSync, failedSync)

      $timeout getSyncs, 3000

    scope.sync = ->
      scope.syncingRepos = true

      sync = Sync.save().$promise.then(->
        pollSyncStatus()
      , ->
        scope.syncingRepos = false
        alert('Your repos failed to sync.')
      )

    scope.$watch 'syncingRepos', (newValue, oldValue) ->
      if newValue
        scope.syncButtonText = '<%= I18n.t('syncing_repos') %>'
      else
        scope.syncButtonText = '<%= I18n.t('sync_repos') %>'

    loadRepos().then ->
      loadUserPaymentInfo().then ->
        if scope.repos.length == 0
          scope.sync()
]
