App.directive 'repo', ['Subscription', 'StripeCheckout', 'User', (Subscription, StripeCheckout, User) ->
  scope: true
  templateUrl: '/templates/repo'
  link: (scope, element, attributes) ->
    activateRepo = ->
      scope.processing = true

      scope.repo.$activate()
        .catch((response) -> alert(errorMessage(response.data)))
        .finally(-> scope.processing = false)

    errorMessage = (responseData) ->
      if responseData.errors.length > 0
        responseData.errors.join("\n")
      else
        "Your repo failed to activate"

    deactivateRepo = ->
      scope.processing = true

      scope.repo.$deactivate()
        .catch(-> alert('Your repo failed to deactivate.'))
        .finally(-> scope.processing = false)

    showCreditCardForm = ->
      StripeCheckout.open(
        name: scope.repo.full_plan_name,
        amount: scope.repo.price_in_cents,
        createSubscriptionWithNewCard
      )

    createSubscription = (user) ->
      activateRepo()

    createSubscriptionWithExistingCard = ->
      scope.processing = true
      subscription = new Subscription(repo_id: scope.repo.id)
      saveSubscription(subscription)

    createSubscriptionWithNewCard = (stripeToken) ->
      scope.processing = true
      subscription = new Subscription(
        repo_id: scope.repo.id
        card_token: stripeToken.id
        email_address: stripeToken.email
      )
      saveSubscription(subscription)

    saveSubscription = (subscription) ->
      subscription.$save().then((response) ->
        scope.repo.active = true
        scope.repo.stripe_subscription_id = response.stripe_subscription_id
      ).catch(->
        alert('Your subscription failed.')
      ).finally(->
        scope.processing = false
      )

    deleteSubscription = ->
      scope.processing = true

      subscription = new Subscription(repo_id: scope.repo.id)

      subscription.$delete().then(->
        scope.repo.active = false
        scope.repo.stripe_subscription_id = null
      ).catch(->
        alert('Your repo could not be disabled')
      ).finally(->
        scope.processing = false
      )

    scope.toggle = ->
      if scope.repo.active
        if scope.repo.stripe_subscription_id
          deleteSubscription()
        else
          deactivateRepo()
      else
        User.get().$promise.then(createSubscription)
]
