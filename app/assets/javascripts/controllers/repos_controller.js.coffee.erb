App.controller 'ReposController', ['$scope', 'Repo', 'Sync', ($scope, Repo, Sync) ->
  loadRepos = ->
    $scope.syncingRepos = false

    repos = Repo.query()
    repos.$promise.then((results) ->
      $scope.repos = results
    , ->
      alert('Your repos failed to load.')
    )

  initialize = ->
    loadRepos()

  pollSyncStatus = ->
    successfulSync = (results) ->
      if results.length > 0
        pollSyncStatus()
      else
        loadRepos()

    failedSync = ->
      pollSyncStatus()

    getSyncs = ->
      syncs = Sync.query()
      syncs.$promise.then(successfulSync, failedSync)

    setTimeout getSyncs, 3000

  $scope.activate = (repo) ->
    activate = repo.$activate()
    activate.then().catch(-> alert('Your repo failed to activate.'))

  $scope.deactivate = (repo) ->
    deactivate = repo.$deactivate()
    deactivate.then().catch(-> alert('Your repo failed to deactivate.'))

  $scope.sync = ->
    $scope.syncingRepos = true

    sync = Sync.save()
    sync.$promise.then(->
      pollSyncStatus()
    , ->
      $scope.syncingRepos = false
      alert('Your repos failed to sync.')
    )

  $scope.$watch 'syncingRepos', (newValue, oldValue) ->
    if newValue
      $scope.syncButtonText = '<%= I18n.t('syncing_repos') %>'
    else
      $scope.syncButtonText = '<%= I18n.t('sync_repos') %>'

  initialize()
]
